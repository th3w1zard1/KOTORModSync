<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFrameworks>net6.0;net462</TargetFrameworks>
    <Nullable>disable</Nullable>
    <LangVersion>7.3</LangVersion>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
    <Platforms>x86;x64;AnyCPU</Platforms>
  </PropertyGroup>

  <!-- net462 needs to explicitly be x64 and x86, other net versions are AnyCPU. See bottom of csproj file-->
  <PropertyGroup>
    <PlatformTarget Condition="'$(TargetFramework)'!='net462'">AnyCPU</PlatformTarget>
    <RuntimeIdentifiers Condition="'$(Platform)'=='x86' And '$(TargetFramework)'=='net462'">win-x86</RuntimeIdentifiers>
    <RuntimeIdentifiers Condition="'$(Platform)'=='x64' And '$(TargetFramework)'=='net462'">win-x64;win7-x64;osx-x64;linux-x64</RuntimeIdentifiers>
    <RuntimeIdentifiers Condition="'$(TargetFramework)'!='net462'">win-x86;win-x64;win7-x64;osx-x64;linux-x64</RuntimeIdentifiers>
  </PropertyGroup>

  <!-- Preferences: Release should have additional error handling at the slight cost of performance. -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <PublishSingleFile>true</PublishSingleFile>
    <PublishReadyToRun>true</PublishReadyToRun>
    <Optimize>true</Optimize>
    <AllowOptimize>true</AllowOptimize>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <AllowEditAndContinue>false</AllowEditAndContinue>
    <DebugSymbols>false</DebugSymbols>
    <DebugType>portable</DebugType>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  
  <!-- Preferences: No error handling/optimizations so we can catch any problems before Release. -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <PublishSingleFile>false</PublishSingleFile>
    <PublishReadyToRun>false</PublishReadyToRun>
    <Optimize>false</Optimize>
    <AllowOptimize>false</AllowOptimize>
    <RemoveIntegerChecks>true</RemoveIntegerChecks>
    <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <AllowEditAndContinue>true</AllowEditAndContinue>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
  </PropertyGroup>

  <!-- AvaloniaUI defs -->
  <PropertyGroup>
    <AvaloniaCopyWin32Dll>false</AvaloniaCopyWin32Dll>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <NoWin32Manifest>true</NoWin32Manifest>
    <ApplicationIcon>icon53.ico</ApplicationIcon>
  </PropertyGroup>

  <ItemGroup>
    <ProjectCapability Include="Avalonia" />
    <TrimmerRootAssembly Include="Avalonia.Themes.Fluent" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="Avalonia" Version="0.10.21" />
    <PackageReference Include="Avalonia.Desktop" Version="0.10.21" />
    <PackageReference Include="Avalonia.LinuxFramebuffer" Version="0.10.21" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="0.10.21" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="XamlNameReferenceGenerator" Version="1.6.1" />
  </ItemGroup>

  <ItemGroup>
    <AvaloniaXaml Update="Styles\DefaultStyle.axaml">
      <Generator>MSBuild:Compile</Generator>
    </AvaloniaXaml>
  </ItemGroup>

  
  <!-- Customization -->
  <ItemGroup>
    <Content Include="icon53.ico" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\KOTORModSync.Core\KOTORModSync.Core.csproj">
      <!-- I believe this builds the 'KOTORModSync.Core.dll' separate rather than packaging into EXE/another dll. -->
      <PrivateAssets>none</PrivateAssets>
    </ProjectReference>
  </ItemGroup>
  
  <!-- All other windows defined here -->
  <ItemGroup>
    <Compile Update="OutputWindow.axaml.cs">
      <DependentUpon>OutputWindow.axaml</DependentUpon>
    </Compile>
    <Compile Update="ConfirmationDialog.axaml.cs">
      <DependentUpon>ConfirmationDialog.axaml</DependentUpon>
    </Compile>
    <Compile Update="InformationDialog.axaml.cs">
      <DependentUpon>InformationDialog.axaml</DependentUpon>
    </Compile>
    <Compile Update="ProgressWindow.axaml.cs">
      <DependentUpon>ProgressWindow.axaml</DependentUpon>
    </Compile>
  </ItemGroup>

  <!-- WindowsDeleteString returntype changes from int to IntPtr HRESULT after net4.x We accommodate this change by replacing with our patches. -->
  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="xcopy $(SolutionDir)vendor\lib\Avalonia.Win32_net4.x_x86.dll $(TargetDir) &amp; del $(TargetDir)Avalonia.Win32.dll /F &amp; ren $(TargetDir)Avalonia.Win32_net4.x_x86.dll Avalonia.Win32.dll" />
  </Target>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="xcopy $(SolutionDir)vendor\lib\Avalonia.Win32_net4.x_x86.dll $(TargetDir) &amp; del $(TargetDir)Avalonia.Win32.dll /F &amp; ren $(TargetDir)Avalonia.Win32_net4.x_x86.dll Avalonia.Win32.dll" />
  </Target>

</Project>
